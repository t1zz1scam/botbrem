import os
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.types import BotCommand
from dotenv import load_dotenv
from fastapi import FastAPI, Request
from starlette.responses import JSONResponse

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–æ—É—Ç–µ—Ä—ã —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
from database import (
    init_db,                   # –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü)
    run_bigint_migration,      # –§—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ id –∫ BIGINT (–µ—Å–ª–∏ –Ω–∞–¥–æ)
    ensure_banned_until_column,# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ banned_until, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    ensure_user_rank_rename,   # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ rank ‚Üí user_rank
    engine,                    # –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–≤–∏–∂–∫–∞ SQLAlchemy
    create_user_if_not_exists, # –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –ë–î
)
from handlers import router as handlers_router  # –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –∏–∑ –ø–∞–ø–∫–∏ handlers
from config import BOT_TOKEN, WEBHOOK_URL, SUPERADMIN_ID

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (HTML —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π)
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)

# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥/—Å–æ–æ–±—â–µ–Ω–∏–π
dp = Dispatcher()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ handlers (–≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
dp.include_router(handlers_router)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å INFO (–≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (ASGI)
app = FastAPI()

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ (FastAPI) ---
@app.on_event("startup")
async def on_startup():
    logging.info("‚ñ∂ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏–π...")

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    await init_db()
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∏–ø–∞ bigint –¥–ª—è id (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    await run_bigint_migration(engine)
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ banned_until –µ—Å—Ç—å
    await ensure_banned_until_column(engine)
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫—É rank –≤ user_rank, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    await ensure_user_rank_rename(engine)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º webhook —É Telegram –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π URL
    await bot.set_webhook(WEBHOOK_URL, secret_token=None)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã /start –∏ /help –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.set_my_commands([
        BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="help", description="–ü–æ–º–æ—â—å"),
    ])

    # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ
    if SUPERADMIN_ID:
        await create_user_if_not_exists(SUPERADMIN_ID)
        logging.info(f"üëë –°—É–ø–µ—Ä–∞–¥–º–∏–Ω {SUPERADMIN_ID} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

    logging.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞ (FastAPI) ---
@app.on_event("shutdown")
async def on_shutdown():
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞ (–æ—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã)
    await bot.session.close()

# --- Webhook endpoint, –∫—É–¥–∞ –¢–µ–ª–µ–≥–∞ —à–ª—ë—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ---
@app.post("/bot-webhook")
async def bot_webhook(request: Request):
    # –ü–æ–ª—É—á–∞–µ–º JSON —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –æ—Ç Telegram
    update = await request.json()
    # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä aiogram –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await dp.feed_update(bot, update, request)
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç —Å OK
    return JSONResponse(content={"status": "ok"})

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é ---
if __name__ == "__main__":
    import uvicorn
    # –ó–∞–ø—É—Å–∫–∞–µ–º ASGI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é uvicorn
    # main:app ‚Äî –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –≤ –º–æ–¥—É–ª–µ main –ª–µ–∂–∏—Ç –æ–±—ä–µ–∫—Ç app (FastAPI)
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=int(os.getenv("PORT", 8000)),
        reload=True,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫–æ–¥–∞ (–¥–ª—è dev)
    )
